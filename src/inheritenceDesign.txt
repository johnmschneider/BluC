1) Planned implementation of inheritance
-1) boolean isComplexDotOp()
    -1) while not at end of file
        -1) if (current token value).equals(".")
            -1) return true
        -2) else if (current token value).equals(";")
            -1) break
    -2) return false

-2) void transpileComplexDotOpFragment()

-3) void transpileComplexDotOp(int statementBeginIndex, int searchStartIndex)
    -1) Search for dot operator
    -2) If dot operator found
        -1) Check if dot operator is used to access a class member
            -1) Check if member is a class
                -1) If member is a class
                    -1) transpileComplexDotOp(statementBeginIndex, memberIndex)
                -2) Else if member is a method
                    -1) transpile appropriate mangled method name and 
                            arguments
                    -2) check for further dot operators starting from 
                        (member index + 1)
                    -3) if found
                        -1) check method return type
                            -1) if class then check for further dot operators
                            -2) if found
                                -1) transpile appropriate mangled method name
                                    and arguments
                                -2) transpileComplexDotOp(member index + 1)
                            -3) else transpile
                    -4) else
                        -1) transpile appropriate mangled method name and 
                            arguments